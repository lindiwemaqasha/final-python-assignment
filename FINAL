import tkinter as tk
from tkinter import messagebox
import requests

# Define the weather app class
class WeatherApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Weather Application")
        self.root.geometry("400x400")

        # API key from OpenWeatherMap
        self.api_key = "your_api_key_here"  # Replace with your own OpenWeatherMap API key
        self.base_url = "http://api.openweathermap.org/data/2.5/weather?"

        # Create the UI components
        self.create_widgets()

    def create_widgets(self):
        # City Label
        self.city_label = tk.Label(self.root, text="Enter City Name", font=("Arial", 14))
        self.city_label.pack(pady=10)

        # City Entry
        self.city_entry = tk.Entry(self.root, font=("Arial", 14), width=20)
        self.city_entry.pack(pady=10)

        # Get Weather Button
        self.get_weather_button = tk.Button(self.root, text="Get Weather", font=("Arial", 14), command=self.get_weather)
        self.get_weather_button.pack(pady=10)

        # Weather Information Label
        self.weather_info_label = tk.Label(self.root, text="", font=("Arial", 14))
        self.weather_info_label.pack(pady=20)

    def get_weather(self):
        # Get the city name from the entry
        city = self.city_entry.get()

        # Check if city name is not empty
        if not city:
            messagebox.showerror("Error", "Please enter a city name.")
            return

        # Construct the full URL for the weather API request
        complete_url = f"{self.base_url}q={city}&appid={self.api_key}&units=metric"

        try:
            # Make a request to the OpenWeatherMap API
            response = requests.get(complete_url)
            data = response.json()

            # If city is not found
            if data["cod"] != "404":
                main = data["main"]
                weather = data["weather"][0]

                # Extract weather data
                temperature = main["temp"]
                pressure = main["pressure"]
                humidity = main["humidity"]
                weather_description = weather["description"]

                # Update the UI with the weather information
                weather_info = f"Temperature: {temperature}Â°C\n"
                weather_info += f"Pressure: {pressure} hPa\n"
                weather_info += f"Humidity: {humidity}%\n"
                weather_info += f"Description: {weather_description.capitalize()}"

                self.weather_info_label.config(text=weather_info)

            else:
                # If the city is not found, show an error message
                messagebox.showerror("Error", "City not found. Please try again.")

        except Exception as e:
            # Handle any exceptions (e.g., no internet connection)
            messagebox.showerror("Error", f"An error occurred: {e}")

# Create the Tkinter window (root) and pass it to the WeatherApp class
if __name__ == "__main__":
    root = tk.Tk()
    app = WeatherApp(root)
    root.mainloop()
